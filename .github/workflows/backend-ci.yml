name: Deploy to EC2

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: ap-northeast-2

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        port: 22
        script: |
          # 프로젝트 디렉토리로 이동 또는 생성
          cd /home/ubuntu/godsaeng-backend || {
            git clone https://github.com/godsaeng-tool/godsaeng-back.git /home/ubuntu/godsaeng-backend
            cd /home/ubuntu/godsaeng-backend
          }
          
          # 최신 코드 가져오기
          git fetch origin
          git reset --hard origin/main
          
          # 환경변수 파일 생성/업데이트
          cat > .env << EOF
          DB_URL=${{ secrets.DB_URL }}
          DB_USERNAME=${{ secrets.DB_USERNAME }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          JWT_EXPIRATION=3600000
          JWT_REFRESH_EXPIRATION=604800000
          LOG_LEVEL=INFO
          AI_CONVERT_URL=http://localhost:5001
          AI_TUTORING_URL=http://localhost:5002
          AI_SUMMARY_URL=http://localhost:5003
          EOF
          
          # 기존 컨테이너 정리 및 재배포
          docker-compose down --remove-orphans || true
          docker-compose build --no-cache
          docker-compose up -d
          
          # 헬스체크
          echo "서비스 배포 완료! 헬스체크 중..."
          sleep 30
          curl -f http://localhost:8080/actuator/health || echo "헬스체크 실패 - 로그를 확인하세요"

 